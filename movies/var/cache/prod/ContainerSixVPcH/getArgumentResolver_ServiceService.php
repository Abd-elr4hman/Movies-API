<?php

namespace ContainerSixVPcH;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getArgumentResolver_ServiceService extends App_KernelProdContainer
{
    /*
     * Gets the private 'argument_resolver.service' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\MoviesController::allMovies' => ['privates', '.service_locator.uQaMK06', 'get_ServiceLocator_UQaMK06Service', true],
            'App\\Controller\\MoviesController::createOneMovie' => ['privates', '.service_locator.9kKwU2t', 'get_ServiceLocator_9kKwU2tService', true],
            'App\\Controller\\MoviesController::deleteOneMovie' => ['privates', '.service_locator.6ODtY4d', 'get_ServiceLocator_6ODtY4dService', true],
            'App\\Controller\\MoviesController::getOneMovie' => ['privates', '.service_locator.rvdmmlk', 'get_ServiceLocator_RvdmmlkService', true],
            'App\\Controller\\MoviesController::updateOneMovie' => ['privates', '.service_locator.6ODtY4d', 'get_ServiceLocator_6ODtY4dService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\MoviesController:allMovies' => ['privates', '.service_locator.uQaMK06', 'get_ServiceLocator_UQaMK06Service', true],
            'App\\Controller\\MoviesController:createOneMovie' => ['privates', '.service_locator.9kKwU2t', 'get_ServiceLocator_9kKwU2tService', true],
            'App\\Controller\\MoviesController:deleteOneMovie' => ['privates', '.service_locator.6ODtY4d', 'get_ServiceLocator_6ODtY4dService', true],
            'App\\Controller\\MoviesController:getOneMovie' => ['privates', '.service_locator.rvdmmlk', 'get_ServiceLocator_RvdmmlkService', true],
            'App\\Controller\\MoviesController:updateOneMovie' => ['privates', '.service_locator.6ODtY4d', 'get_ServiceLocator_6ODtY4dService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\MoviesController::allMovies' => '?',
            'App\\Controller\\MoviesController::createOneMovie' => '?',
            'App\\Controller\\MoviesController::deleteOneMovie' => '?',
            'App\\Controller\\MoviesController::getOneMovie' => '?',
            'App\\Controller\\MoviesController::updateOneMovie' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\MoviesController:allMovies' => '?',
            'App\\Controller\\MoviesController:createOneMovie' => '?',
            'App\\Controller\\MoviesController:deleteOneMovie' => '?',
            'App\\Controller\\MoviesController:getOneMovie' => '?',
            'App\\Controller\\MoviesController:updateOneMovie' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]));
    }
}
